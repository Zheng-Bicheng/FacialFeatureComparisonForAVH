def @main(%x: Tensor[(1, 3, 112, 112), float32] /* ty=Tensor[(1, 3, 112, 112), float32] */) -> Tensor[(1, 128), float32] {
  %0 = nn.conv2d(%x, meta[relay.Constant][0] /* ty=Tensor[(64, 3, 3, 3), float32] */, strides=[2, 2], padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3]) /* ty=Tensor[(1, 64, 56, 56), float32] */;
  %1 = nn.batch_norm(%0, meta[relay.Constant][1] /* ty=Tensor[(64), float32] */, meta[relay.Constant][2] /* ty=Tensor[(64), float32] */, meta[relay.Constant][3] /* ty=Tensor[(64), float32] */, meta[relay.Constant][4] /* ty=Tensor[(64), float32] */) /* ty=(Tensor[(1, 64, 56, 56), float32], Tensor[(64), float32], Tensor[(64), float32]) */;
  %2 = %1.0 /* ty=Tensor[(1, 64, 56, 56), float32] */;
  %3 = broadcast_to_like(meta[relay.Constant][5] /* ty=Tensor[(64, 1, 1), float32] */, %2) /* ty=Tensor[(1, 64, 56, 56), float32] */;
  %4 = reshape(%2, newshape=[-1]) /* ty=Tensor[(200704), float32] */;
  %5 = reshape(%3, newshape=[-1]) /* ty=Tensor[(200704), float32] */;
  %6 = nn.prelu(%4, %5, axis=0) /* ty=Tensor[(200704), float32] */;
  %7 = reshape(%6, newshape=[1, 64, 56, 56]) /* ty=Tensor[(1, 64, 56, 56), float32] */;
  %8 = nn.conv2d(%7, meta[relay.Constant][6] /* ty=Tensor[(64, 1, 3, 3), float32] */, padding=[1, 1, 1, 1], groups=64, channels=64, kernel_size=[3, 3]) /* ty=Tensor[(1, 64, 56, 56), float32] */;
  %9 = nn.batch_norm(%8, meta[relay.Constant][7] /* ty=Tensor[(64), float32] */, meta[relay.Constant][8] /* ty=Tensor[(64), float32] */, meta[relay.Constant][9] /* ty=Tensor[(64), float32] */, meta[relay.Constant][10] /* ty=Tensor[(64), float32] */) /* ty=(Tensor[(1, 64, 56, 56), float32], Tensor[(64), float32], Tensor[(64), float32]) */;
  %10 = %9.0 /* ty=Tensor[(1, 64, 56, 56), float32] */;
  %11 = broadcast_to_like(meta[relay.Constant][11] /* ty=Tensor[(64, 1, 1), float32] */, %10) /* ty=Tensor[(1, 64, 56, 56), float32] */;
  %12 = reshape(%10, newshape=[-1]) /* ty=Tensor[(200704), float32] */;
  %13 = reshape(%11, newshape=[-1]) /* ty=Tensor[(200704), float32] */;
  %14 = nn.prelu(%12, %13, axis=0) /* ty=Tensor[(200704), float32] */;
  %15 = reshape(%14, newshape=[1, 64, 56, 56]) /* ty=Tensor[(1, 64, 56, 56), float32] */;
  %16 = nn.conv2d(%15, meta[relay.Constant][12] /* ty=Tensor[(128, 64, 1, 1), float32] */, padding=[0, 0, 0, 0], channels=128, kernel_size=[1, 1]) /* ty=Tensor[(1, 128, 56, 56), float32] */;
  %17 = nn.batch_norm(%16, meta[relay.Constant][13] /* ty=Tensor[(128), float32] */, meta[relay.Constant][14] /* ty=Tensor[(128), float32] */, meta[relay.Constant][15] /* ty=Tensor[(128), float32] */, meta[relay.Constant][16] /* ty=Tensor[(128), float32] */) /* ty=(Tensor[(1, 128, 56, 56), float32], Tensor[(128), float32], Tensor[(128), float32]) */;
  %18 = %17.0 /* ty=Tensor[(1, 128, 56, 56), float32] */;
  %19 = broadcast_to_like(meta[relay.Constant][17] /* ty=Tensor[(128, 1, 1), float32] */, %18) /* ty=Tensor[(1, 128, 56, 56), float32] */;
  %20 = reshape(%18, newshape=[-1]) /* ty=Tensor[(401408), float32] */;
  %21 = reshape(%19, newshape=[-1]) /* ty=Tensor[(401408), float32] */;
  %22 = nn.prelu(%20, %21, axis=0) /* ty=Tensor[(401408), float32] */;
  %23 = reshape(%22, newshape=[1, 128, 56, 56]) /* ty=Tensor[(1, 128, 56, 56), float32] */;
  %24 = nn.conv2d(%23, meta[relay.Constant][18] /* ty=Tensor[(128, 1, 3, 3), float32] */, strides=[2, 2], padding=[1, 1, 1, 1], groups=128, channels=128, kernel_size=[3, 3]) /* ty=Tensor[(1, 128, 28, 28), float32] */;
  %25 = nn.batch_norm(%24, meta[relay.Constant][19] /* ty=Tensor[(128), float32] */, meta[relay.Constant][20] /* ty=Tensor[(128), float32] */, meta[relay.Constant][21] /* ty=Tensor[(128), float32] */, meta[relay.Constant][22] /* ty=Tensor[(128), float32] */) /* ty=(Tensor[(1, 128, 28, 28), float32], Tensor[(128), float32], Tensor[(128), float32]) */;
  %26 = %25.0 /* ty=Tensor[(1, 128, 28, 28), float32] */;
  %27 = broadcast_to_like(meta[relay.Constant][23] /* ty=Tensor[(128, 1, 1), float32] */, %26) /* ty=Tensor[(1, 128, 28, 28), float32] */;
  %28 = reshape(%26, newshape=[-1]) /* ty=Tensor[(100352), float32] */;
  %29 = reshape(%27, newshape=[-1]) /* ty=Tensor[(100352), float32] */;
  %30 = nn.prelu(%28, %29, axis=0) /* ty=Tensor[(100352), float32] */;
  %31 = reshape(%30, newshape=[1, 128, 28, 28]) /* ty=Tensor[(1, 128, 28, 28), float32] */;
  %32 = nn.conv2d(%31, meta[relay.Constant][24] /* ty=Tensor[(64, 128, 1, 1), float32] */, padding=[0, 0, 0, 0], channels=64, kernel_size=[1, 1]) /* ty=Tensor[(1, 64, 28, 28), float32] */;
  %33 = nn.batch_norm(%32, meta[relay.Constant][25] /* ty=Tensor[(64), float32] */, meta[relay.Constant][26] /* ty=Tensor[(64), float32] */, meta[relay.Constant][27] /* ty=Tensor[(64), float32] */, meta[relay.Constant][28] /* ty=Tensor[(64), float32] */) /* ty=(Tensor[(1, 64, 28, 28), float32], Tensor[(64), float32], Tensor[(64), float32]) */;
  %34 = %33.0 /* ty=Tensor[(1, 64, 28, 28), float32] */;
  %35 = nn.conv2d(%34, meta[relay.Constant][29] /* ty=Tensor[(128, 64, 1, 1), float32] */, padding=[0, 0, 0, 0], channels=128, kernel_size=[1, 1]) /* ty=Tensor[(1, 128, 28, 28), float32] */;
  %36 = nn.batch_norm(%35, meta[relay.Constant][30] /* ty=Tensor[(128), float32] */, meta[relay.Constant][31] /* ty=Tensor[(128), float32] */, meta[relay.Constant][32] /* ty=Tensor[(128), float32] */, meta[relay.Constant][33] /* ty=Tensor[(128), float32] */) /* ty=(Tensor[(1, 128, 28, 28), float32], Tensor[(128), float32], Tensor[(128), float32]) */;
  %37 = %36.0 /* ty=Tensor[(1, 128, 28, 28), float32] */;
  %38 = broadcast_to_like(meta[relay.Constant][34] /* ty=Tensor[(128, 1, 1), float32] */, %37) /* ty=Tensor[(1, 128, 28, 28), float32] */;
  %39 = reshape(%37, newshape=[-1]) /* ty=Tensor[(100352), float32] */;
  %40 = reshape(%38, newshape=[-1]) /* ty=Tensor[(100352), float32] */;
  %41 = nn.prelu(%39, %40, axis=0) /* ty=Tensor[(100352), float32] */;
  %42 = reshape(%41, newshape=[1, 128, 28, 28]) /* ty=Tensor[(1, 128, 28, 28), float32] */;
  %43 = nn.conv2d(%42, meta[relay.Constant][35] /* ty=Tensor[(128, 1, 3, 3), float32] */, padding=[1, 1, 1, 1], groups=128, channels=128, kernel_size=[3, 3]) /* ty=Tensor[(1, 128, 28, 28), float32] */;
  %44 = nn.batch_norm(%43, meta[relay.Constant][36] /* ty=Tensor[(128), float32] */, meta[relay.Constant][37] /* ty=Tensor[(128), float32] */, meta[relay.Constant][38] /* ty=Tensor[(128), float32] */, meta[relay.Constant][39] /* ty=Tensor[(128), float32] */) /* ty=(Tensor[(1, 128, 28, 28), float32], Tensor[(128), float32], Tensor[(128), float32]) */;
  %45 = %44.0 /* ty=Tensor[(1, 128, 28, 28), float32] */;
  %46 = broadcast_to_like(meta[relay.Constant][40] /* ty=Tensor[(128, 1, 1), float32] */, %45) /* ty=Tensor[(1, 128, 28, 28), float32] */;
  %47 = reshape(%45, newshape=[-1]) /* ty=Tensor[(100352), float32] */;
  %48 = reshape(%46, newshape=[-1]) /* ty=Tensor[(100352), float32] */;
  %49 = nn.prelu(%47, %48, axis=0) /* ty=Tensor[(100352), float32] */;
  %50 = reshape(%49, newshape=[1, 128, 28, 28]) /* ty=Tensor[(1, 128, 28, 28), float32] */;
  %51 = nn.conv2d(%50, meta[relay.Constant][41] /* ty=Tensor[(64, 128, 1, 1), float32] */, padding=[0, 0, 0, 0], channels=64, kernel_size=[1, 1]) /* ty=Tensor[(1, 64, 28, 28), float32] */;
  %52 = nn.batch_norm(%51, meta[relay.Constant][42] /* ty=Tensor[(64), float32] */, meta[relay.Constant][43] /* ty=Tensor[(64), float32] */, meta[relay.Constant][44] /* ty=Tensor[(64), float32] */, meta[relay.Constant][45] /* ty=Tensor[(64), float32] */) /* ty=(Tensor[(1, 64, 28, 28), float32], Tensor[(64), float32], Tensor[(64), float32]) */;
  %53 = %52.0 /* ty=Tensor[(1, 64, 28, 28), float32] */;
  %54 = add(%34, %53) /* ty=Tensor[(1, 64, 28, 28), float32] */;
  %55 = nn.conv2d(%54, meta[relay.Constant][46] /* ty=Tensor[(128, 64, 1, 1), float32] */, padding=[0, 0, 0, 0], channels=128, kernel_size=[1, 1]) /* ty=Tensor[(1, 128, 28, 28), float32] */;
  %56 = nn.batch_norm(%55, meta[relay.Constant][47] /* ty=Tensor[(128), float32] */, meta[relay.Constant][48] /* ty=Tensor[(128), float32] */, meta[relay.Constant][49] /* ty=Tensor[(128), float32] */, meta[relay.Constant][50] /* ty=Tensor[(128), float32] */) /* ty=(Tensor[(1, 128, 28, 28), float32], Tensor[(128), float32], Tensor[(128), float32]) */;
  %57 = %56.0 /* ty=Tensor[(1, 128, 28, 28), float32] */;
  %58 = broadcast_to_like(meta[relay.Constant][51] /* ty=Tensor[(128, 1, 1), float32] */, %57) /* ty=Tensor[(1, 128, 28, 28), float32] */;
  %59 = reshape(%57, newshape=[-1]) /* ty=Tensor[(100352), float32] */;
  %60 = reshape(%58, newshape=[-1]) /* ty=Tensor[(100352), float32] */;
  %61 = nn.prelu(%59, %60, axis=0) /* ty=Tensor[(100352), float32] */;
  %62 = reshape(%61, newshape=[1, 128, 28, 28]) /* ty=Tensor[(1, 128, 28, 28), float32] */;
  %63 = nn.conv2d(%62, meta[relay.Constant][52] /* ty=Tensor[(128, 1, 3, 3), float32] */, padding=[1, 1, 1, 1], groups=128, channels=128, kernel_size=[3, 3]) /* ty=Tensor[(1, 128, 28, 28), float32] */;
  %64 = nn.batch_norm(%63, meta[relay.Constant][53] /* ty=Tensor[(128), float32] */, meta[relay.Constant][54] /* ty=Tensor[(128), float32] */, meta[relay.Constant][55] /* ty=Tensor[(128), float32] */, meta[relay.Constant][56] /* ty=Tensor[(128), float32] */) /* ty=(Tensor[(1, 128, 28, 28), float32], Tensor[(128), float32], Tensor[(128), float32]) */;
  %65 = %64.0 /* ty=Tensor[(1, 128, 28, 28), float32] */;
  %66 = broadcast_to_like(meta[relay.Constant][57] /* ty=Tensor[(128, 1, 1), float32] */, %65) /* ty=Tensor[(1, 128, 28, 28), float32] */;
  %67 = reshape(%65, newshape=[-1]) /* ty=Tensor[(100352), float32] */;
  %68 = reshape(%66, newshape=[-1]) /* ty=Tensor[(100352), float32] */;
  %69 = nn.prelu(%67, %68, axis=0) /* ty=Tensor[(100352), float32] */;
  %70 = reshape(%69, newshape=[1, 128, 28, 28]) /* ty=Tensor[(1, 128, 28, 28), float32] */;
  %71 = nn.conv2d(%70, meta[relay.Constant][58] /* ty=Tensor[(64, 128, 1, 1), float32] */, padding=[0, 0, 0, 0], channels=64, kernel_size=[1, 1]) /* ty=Tensor[(1, 64, 28, 28), float32] */;
  %72 = nn.batch_norm(%71, meta[relay.Constant][59] /* ty=Tensor[(64), float32] */, meta[relay.Constant][60] /* ty=Tensor[(64), float32] */, meta[relay.Constant][61] /* ty=Tensor[(64), float32] */, meta[relay.Constant][62] /* ty=Tensor[(64), float32] */) /* ty=(Tensor[(1, 64, 28, 28), float32], Tensor[(64), float32], Tensor[(64), float32]) */;
  %73 = %72.0 /* ty=Tensor[(1, 64, 28, 28), float32] */;
  %74 = add(%54, %73) /* ty=Tensor[(1, 64, 28, 28), float32] */;
  %75 = nn.conv2d(%74, meta[relay.Constant][63] /* ty=Tensor[(128, 64, 1, 1), float32] */, padding=[0, 0, 0, 0], channels=128, kernel_size=[1, 1]) /* ty=Tensor[(1, 128, 28, 28), float32] */;
  %76 = nn.batch_norm(%75, meta[relay.Constant][64] /* ty=Tensor[(128), float32] */, meta[relay.Constant][65] /* ty=Tensor[(128), float32] */, meta[relay.Constant][66] /* ty=Tensor[(128), float32] */, meta[relay.Constant][67] /* ty=Tensor[(128), float32] */) /* ty=(Tensor[(1, 128, 28, 28), float32], Tensor[(128), float32], Tensor[(128), float32]) */;
  %77 = %76.0 /* ty=Tensor[(1, 128, 28, 28), float32] */;
  %78 = broadcast_to_like(meta[relay.Constant][68] /* ty=Tensor[(128, 1, 1), float32] */, %77) /* ty=Tensor[(1, 128, 28, 28), float32] */;
  %79 = reshape(%77, newshape=[-1]) /* ty=Tensor[(100352), float32] */;
  %80 = reshape(%78, newshape=[-1]) /* ty=Tensor[(100352), float32] */;
  %81 = nn.prelu(%79, %80, axis=0) /* ty=Tensor[(100352), float32] */;
  %82 = reshape(%81, newshape=[1, 128, 28, 28]) /* ty=Tensor[(1, 128, 28, 28), float32] */;
  %83 = nn.conv2d(%82, meta[relay.Constant][69] /* ty=Tensor[(128, 1, 3, 3), float32] */, padding=[1, 1, 1, 1], groups=128, channels=128, kernel_size=[3, 3]) /* ty=Tensor[(1, 128, 28, 28), float32] */;
  %84 = nn.batch_norm(%83, meta[relay.Constant][70] /* ty=Tensor[(128), float32] */, meta[relay.Constant][71] /* ty=Tensor[(128), float32] */, meta[relay.Constant][72] /* ty=Tensor[(128), float32] */, meta[relay.Constant][73] /* ty=Tensor[(128), float32] */) /* ty=(Tensor[(1, 128, 28, 28), float32], Tensor[(128), float32], Tensor[(128), float32]) */;
  %85 = %84.0 /* ty=Tensor[(1, 128, 28, 28), float32] */;
  %86 = broadcast_to_like(meta[relay.Constant][74] /* ty=Tensor[(128, 1, 1), float32] */, %85) /* ty=Tensor[(1, 128, 28, 28), float32] */;
  %87 = reshape(%85, newshape=[-1]) /* ty=Tensor[(100352), float32] */;
  %88 = reshape(%86, newshape=[-1]) /* ty=Tensor[(100352), float32] */;
  %89 = nn.prelu(%87, %88, axis=0) /* ty=Tensor[(100352), float32] */;
  %90 = reshape(%89, newshape=[1, 128, 28, 28]) /* ty=Tensor[(1, 128, 28, 28), float32] */;
  %91 = nn.conv2d(%90, meta[relay.Constant][75] /* ty=Tensor[(64, 128, 1, 1), float32] */, padding=[0, 0, 0, 0], channels=64, kernel_size=[1, 1]) /* ty=Tensor[(1, 64, 28, 28), float32] */;
  %92 = nn.batch_norm(%91, meta[relay.Constant][76] /* ty=Tensor[(64), float32] */, meta[relay.Constant][77] /* ty=Tensor[(64), float32] */, meta[relay.Constant][78] /* ty=Tensor[(64), float32] */, meta[relay.Constant][79] /* ty=Tensor[(64), float32] */) /* ty=(Tensor[(1, 64, 28, 28), float32], Tensor[(64), float32], Tensor[(64), float32]) */;
  %93 = %92.0 /* ty=Tensor[(1, 64, 28, 28), float32] */;
  %94 = add(%74, %93) /* ty=Tensor[(1, 64, 28, 28), float32] */;
  %95 = nn.conv2d(%94, meta[relay.Constant][80] /* ty=Tensor[(128, 64, 1, 1), float32] */, padding=[0, 0, 0, 0], channels=128, kernel_size=[1, 1]) /* ty=Tensor[(1, 128, 28, 28), float32] */;
  %96 = nn.batch_norm(%95, meta[relay.Constant][81] /* ty=Tensor[(128), float32] */, meta[relay.Constant][82] /* ty=Tensor[(128), float32] */, meta[relay.Constant][83] /* ty=Tensor[(128), float32] */, meta[relay.Constant][84] /* ty=Tensor[(128), float32] */) /* ty=(Tensor[(1, 128, 28, 28), float32], Tensor[(128), float32], Tensor[(128), float32]) */;
  %97 = %96.0 /* ty=Tensor[(1, 128, 28, 28), float32] */;
  %98 = broadcast_to_like(meta[relay.Constant][85] /* ty=Tensor[(128, 1, 1), float32] */, %97) /* ty=Tensor[(1, 128, 28, 28), float32] */;
  %99 = reshape(%97, newshape=[-1]) /* ty=Tensor[(100352), float32] */;
  %100 = reshape(%98, newshape=[-1]) /* ty=Tensor[(100352), float32] */;
  %101 = nn.prelu(%99, %100, axis=0) /* ty=Tensor[(100352), float32] */;
  %102 = reshape(%101, newshape=[1, 128, 28, 28]) /* ty=Tensor[(1, 128, 28, 28), float32] */;
  %103 = nn.conv2d(%102, meta[relay.Constant][86] /* ty=Tensor[(128, 1, 3, 3), float32] */, padding=[1, 1, 1, 1], groups=128, channels=128, kernel_size=[3, 3]) /* ty=Tensor[(1, 128, 28, 28), float32] */;
  %104 = nn.batch_norm(%103, meta[relay.Constant][87] /* ty=Tensor[(128), float32] */, meta[relay.Constant][88] /* ty=Tensor[(128), float32] */, meta[relay.Constant][89] /* ty=Tensor[(128), float32] */, meta[relay.Constant][90] /* ty=Tensor[(128), float32] */) /* ty=(Tensor[(1, 128, 28, 28), float32], Tensor[(128), float32], Tensor[(128), float32]) */;
  %105 = %104.0 /* ty=Tensor[(1, 128, 28, 28), float32] */;
  %106 = broadcast_to_like(meta[relay.Constant][91] /* ty=Tensor[(128, 1, 1), float32] */, %105) /* ty=Tensor[(1, 128, 28, 28), float32] */;
  %107 = reshape(%105, newshape=[-1]) /* ty=Tensor[(100352), float32] */;
  %108 = reshape(%106, newshape=[-1]) /* ty=Tensor[(100352), float32] */;
  %109 = nn.prelu(%107, %108, axis=0) /* ty=Tensor[(100352), float32] */;
  %110 = reshape(%109, newshape=[1, 128, 28, 28]) /* ty=Tensor[(1, 128, 28, 28), float32] */;
  %111 = nn.conv2d(%110, meta[relay.Constant][92] /* ty=Tensor[(64, 128, 1, 1), float32] */, padding=[0, 0, 0, 0], channels=64, kernel_size=[1, 1]) /* ty=Tensor[(1, 64, 28, 28), float32] */;
  %112 = nn.batch_norm(%111, meta[relay.Constant][93] /* ty=Tensor[(64), float32] */, meta[relay.Constant][94] /* ty=Tensor[(64), float32] */, meta[relay.Constant][95] /* ty=Tensor[(64), float32] */, meta[relay.Constant][96] /* ty=Tensor[(64), float32] */) /* ty=(Tensor[(1, 64, 28, 28), float32], Tensor[(64), float32], Tensor[(64), float32]) */;
  %113 = %112.0 /* ty=Tensor[(1, 64, 28, 28), float32] */;
  %114 = add(%94, %113) /* ty=Tensor[(1, 64, 28, 28), float32] */;
  %115 = nn.conv2d(%114, meta[relay.Constant][97] /* ty=Tensor[(256, 64, 1, 1), float32] */, padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1]) /* ty=Tensor[(1, 256, 28, 28), float32] */;
  %116 = nn.batch_norm(%115, meta[relay.Constant][98] /* ty=Tensor[(256), float32] */, meta[relay.Constant][99] /* ty=Tensor[(256), float32] */, meta[relay.Constant][100] /* ty=Tensor[(256), float32] */, meta[relay.Constant][101] /* ty=Tensor[(256), float32] */) /* ty=(Tensor[(1, 256, 28, 28), float32], Tensor[(256), float32], Tensor[(256), float32]) */;
  %117 = %116.0 /* ty=Tensor[(1, 256, 28, 28), float32] */;
  %118 = broadcast_to_like(meta[relay.Constant][102] /* ty=Tensor[(256, 1, 1), float32] */, %117) /* ty=Tensor[(1, 256, 28, 28), float32] */;
  %119 = reshape(%117, newshape=[-1]) /* ty=Tensor[(200704), float32] */;
  %120 = reshape(%118, newshape=[-1]) /* ty=Tensor[(200704), float32] */;
  %121 = nn.prelu(%119, %120, axis=0) /* ty=Tensor[(200704), float32] */;
  %122 = reshape(%121, newshape=[1, 256, 28, 28]) /* ty=Tensor[(1, 256, 28, 28), float32] */;
  %123 = nn.conv2d(%122, meta[relay.Constant][103] /* ty=Tensor[(256, 1, 3, 3), float32] */, strides=[2, 2], padding=[1, 1, 1, 1], groups=256, channels=256, kernel_size=[3, 3]) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %124 = nn.batch_norm(%123, meta[relay.Constant][104] /* ty=Tensor[(256), float32] */, meta[relay.Constant][105] /* ty=Tensor[(256), float32] */, meta[relay.Constant][106] /* ty=Tensor[(256), float32] */, meta[relay.Constant][107] /* ty=Tensor[(256), float32] */) /* ty=(Tensor[(1, 256, 14, 14), float32], Tensor[(256), float32], Tensor[(256), float32]) */;
  %125 = %124.0 /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %126 = broadcast_to_like(meta[relay.Constant][108] /* ty=Tensor[(256, 1, 1), float32] */, %125) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %127 = reshape(%125, newshape=[-1]) /* ty=Tensor[(50176), float32] */;
  %128 = reshape(%126, newshape=[-1]) /* ty=Tensor[(50176), float32] */;
  %129 = nn.prelu(%127, %128, axis=0) /* ty=Tensor[(50176), float32] */;
  %130 = reshape(%129, newshape=[1, 256, 14, 14]) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %131 = nn.conv2d(%130, meta[relay.Constant][109] /* ty=Tensor[(128, 256, 1, 1), float32] */, padding=[0, 0, 0, 0], channels=128, kernel_size=[1, 1]) /* ty=Tensor[(1, 128, 14, 14), float32] */;
  %132 = nn.batch_norm(%131, meta[relay.Constant][110] /* ty=Tensor[(128), float32] */, meta[relay.Constant][111] /* ty=Tensor[(128), float32] */, meta[relay.Constant][112] /* ty=Tensor[(128), float32] */, meta[relay.Constant][113] /* ty=Tensor[(128), float32] */) /* ty=(Tensor[(1, 128, 14, 14), float32], Tensor[(128), float32], Tensor[(128), float32]) */;
  %133 = %132.0 /* ty=Tensor[(1, 128, 14, 14), float32] */;
  %134 = nn.conv2d(%133, meta[relay.Constant][114] /* ty=Tensor[(256, 128, 1, 1), float32] */, padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1]) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %135 = nn.batch_norm(%134, meta[relay.Constant][115] /* ty=Tensor[(256), float32] */, meta[relay.Constant][116] /* ty=Tensor[(256), float32] */, meta[relay.Constant][117] /* ty=Tensor[(256), float32] */, meta[relay.Constant][118] /* ty=Tensor[(256), float32] */) /* ty=(Tensor[(1, 256, 14, 14), float32], Tensor[(256), float32], Tensor[(256), float32]) */;
  %136 = %135.0 /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %137 = broadcast_to_like(meta[relay.Constant][119] /* ty=Tensor[(256, 1, 1), float32] */, %136) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %138 = reshape(%136, newshape=[-1]) /* ty=Tensor[(50176), float32] */;
  %139 = reshape(%137, newshape=[-1]) /* ty=Tensor[(50176), float32] */;
  %140 = nn.prelu(%138, %139, axis=0) /* ty=Tensor[(50176), float32] */;
  %141 = reshape(%140, newshape=[1, 256, 14, 14]) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %142 = nn.conv2d(%141, meta[relay.Constant][120] /* ty=Tensor[(256, 1, 3, 3), float32] */, padding=[1, 1, 1, 1], groups=256, channels=256, kernel_size=[3, 3]) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %143 = nn.batch_norm(%142, meta[relay.Constant][121] /* ty=Tensor[(256), float32] */, meta[relay.Constant][122] /* ty=Tensor[(256), float32] */, meta[relay.Constant][123] /* ty=Tensor[(256), float32] */, meta[relay.Constant][124] /* ty=Tensor[(256), float32] */) /* ty=(Tensor[(1, 256, 14, 14), float32], Tensor[(256), float32], Tensor[(256), float32]) */;
  %144 = %143.0 /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %145 = broadcast_to_like(meta[relay.Constant][125] /* ty=Tensor[(256, 1, 1), float32] */, %144) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %146 = reshape(%144, newshape=[-1]) /* ty=Tensor[(50176), float32] */;
  %147 = reshape(%145, newshape=[-1]) /* ty=Tensor[(50176), float32] */;
  %148 = nn.prelu(%146, %147, axis=0) /* ty=Tensor[(50176), float32] */;
  %149 = reshape(%148, newshape=[1, 256, 14, 14]) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %150 = nn.conv2d(%149, meta[relay.Constant][126] /* ty=Tensor[(128, 256, 1, 1), float32] */, padding=[0, 0, 0, 0], channels=128, kernel_size=[1, 1]) /* ty=Tensor[(1, 128, 14, 14), float32] */;
  %151 = nn.batch_norm(%150, meta[relay.Constant][127] /* ty=Tensor[(128), float32] */, meta[relay.Constant][128] /* ty=Tensor[(128), float32] */, meta[relay.Constant][129] /* ty=Tensor[(128), float32] */, meta[relay.Constant][130] /* ty=Tensor[(128), float32] */) /* ty=(Tensor[(1, 128, 14, 14), float32], Tensor[(128), float32], Tensor[(128), float32]) */;
  %152 = %151.0 /* ty=Tensor[(1, 128, 14, 14), float32] */;
  %153 = add(%133, %152) /* ty=Tensor[(1, 128, 14, 14), float32] */;
  %154 = nn.conv2d(%153, meta[relay.Constant][131] /* ty=Tensor[(256, 128, 1, 1), float32] */, padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1]) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %155 = nn.batch_norm(%154, meta[relay.Constant][132] /* ty=Tensor[(256), float32] */, meta[relay.Constant][133] /* ty=Tensor[(256), float32] */, meta[relay.Constant][134] /* ty=Tensor[(256), float32] */, meta[relay.Constant][135] /* ty=Tensor[(256), float32] */) /* ty=(Tensor[(1, 256, 14, 14), float32], Tensor[(256), float32], Tensor[(256), float32]) */;
  %156 = %155.0 /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %157 = broadcast_to_like(meta[relay.Constant][136] /* ty=Tensor[(256, 1, 1), float32] */, %156) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %158 = reshape(%156, newshape=[-1]) /* ty=Tensor[(50176), float32] */;
  %159 = reshape(%157, newshape=[-1]) /* ty=Tensor[(50176), float32] */;
  %160 = nn.prelu(%158, %159, axis=0) /* ty=Tensor[(50176), float32] */;
  %161 = reshape(%160, newshape=[1, 256, 14, 14]) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %162 = nn.conv2d(%161, meta[relay.Constant][137] /* ty=Tensor[(256, 1, 3, 3), float32] */, padding=[1, 1, 1, 1], groups=256, channels=256, kernel_size=[3, 3]) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %163 = nn.batch_norm(%162, meta[relay.Constant][138] /* ty=Tensor[(256), float32] */, meta[relay.Constant][139] /* ty=Tensor[(256), float32] */, meta[relay.Constant][140] /* ty=Tensor[(256), float32] */, meta[relay.Constant][141] /* ty=Tensor[(256), float32] */) /* ty=(Tensor[(1, 256, 14, 14), float32], Tensor[(256), float32], Tensor[(256), float32]) */;
  %164 = %163.0 /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %165 = broadcast_to_like(meta[relay.Constant][142] /* ty=Tensor[(256, 1, 1), float32] */, %164) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %166 = reshape(%164, newshape=[-1]) /* ty=Tensor[(50176), float32] */;
  %167 = reshape(%165, newshape=[-1]) /* ty=Tensor[(50176), float32] */;
  %168 = nn.prelu(%166, %167, axis=0) /* ty=Tensor[(50176), float32] */;
  %169 = reshape(%168, newshape=[1, 256, 14, 14]) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %170 = nn.conv2d(%169, meta[relay.Constant][143] /* ty=Tensor[(128, 256, 1, 1), float32] */, padding=[0, 0, 0, 0], channels=128, kernel_size=[1, 1]) /* ty=Tensor[(1, 128, 14, 14), float32] */;
  %171 = nn.batch_norm(%170, meta[relay.Constant][144] /* ty=Tensor[(128), float32] */, meta[relay.Constant][145] /* ty=Tensor[(128), float32] */, meta[relay.Constant][146] /* ty=Tensor[(128), float32] */, meta[relay.Constant][147] /* ty=Tensor[(128), float32] */) /* ty=(Tensor[(1, 128, 14, 14), float32], Tensor[(128), float32], Tensor[(128), float32]) */;
  %172 = %171.0 /* ty=Tensor[(1, 128, 14, 14), float32] */;
  %173 = add(%153, %172) /* ty=Tensor[(1, 128, 14, 14), float32] */;
  %174 = nn.conv2d(%173, meta[relay.Constant][148] /* ty=Tensor[(256, 128, 1, 1), float32] */, padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1]) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %175 = nn.batch_norm(%174, meta[relay.Constant][149] /* ty=Tensor[(256), float32] */, meta[relay.Constant][150] /* ty=Tensor[(256), float32] */, meta[relay.Constant][151] /* ty=Tensor[(256), float32] */, meta[relay.Constant][152] /* ty=Tensor[(256), float32] */) /* ty=(Tensor[(1, 256, 14, 14), float32], Tensor[(256), float32], Tensor[(256), float32]) */;
  %176 = %175.0 /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %177 = broadcast_to_like(meta[relay.Constant][153] /* ty=Tensor[(256, 1, 1), float32] */, %176) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %178 = reshape(%176, newshape=[-1]) /* ty=Tensor[(50176), float32] */;
  %179 = reshape(%177, newshape=[-1]) /* ty=Tensor[(50176), float32] */;
  %180 = nn.prelu(%178, %179, axis=0) /* ty=Tensor[(50176), float32] */;
  %181 = reshape(%180, newshape=[1, 256, 14, 14]) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %182 = nn.conv2d(%181, meta[relay.Constant][154] /* ty=Tensor[(256, 1, 3, 3), float32] */, padding=[1, 1, 1, 1], groups=256, channels=256, kernel_size=[3, 3]) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %183 = nn.batch_norm(%182, meta[relay.Constant][155] /* ty=Tensor[(256), float32] */, meta[relay.Constant][156] /* ty=Tensor[(256), float32] */, meta[relay.Constant][157] /* ty=Tensor[(256), float32] */, meta[relay.Constant][158] /* ty=Tensor[(256), float32] */) /* ty=(Tensor[(1, 256, 14, 14), float32], Tensor[(256), float32], Tensor[(256), float32]) */;
  %184 = %183.0 /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %185 = broadcast_to_like(meta[relay.Constant][159] /* ty=Tensor[(256, 1, 1), float32] */, %184) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %186 = reshape(%184, newshape=[-1]) /* ty=Tensor[(50176), float32] */;
  %187 = reshape(%185, newshape=[-1]) /* ty=Tensor[(50176), float32] */;
  %188 = nn.prelu(%186, %187, axis=0) /* ty=Tensor[(50176), float32] */;
  %189 = reshape(%188, newshape=[1, 256, 14, 14]) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %190 = nn.conv2d(%189, meta[relay.Constant][160] /* ty=Tensor[(128, 256, 1, 1), float32] */, padding=[0, 0, 0, 0], channels=128, kernel_size=[1, 1]) /* ty=Tensor[(1, 128, 14, 14), float32] */;
  %191 = nn.batch_norm(%190, meta[relay.Constant][161] /* ty=Tensor[(128), float32] */, meta[relay.Constant][162] /* ty=Tensor[(128), float32] */, meta[relay.Constant][163] /* ty=Tensor[(128), float32] */, meta[relay.Constant][164] /* ty=Tensor[(128), float32] */) /* ty=(Tensor[(1, 128, 14, 14), float32], Tensor[(128), float32], Tensor[(128), float32]) */;
  %192 = %191.0 /* ty=Tensor[(1, 128, 14, 14), float32] */;
  %193 = add(%173, %192) /* ty=Tensor[(1, 128, 14, 14), float32] */;
  %194 = nn.conv2d(%193, meta[relay.Constant][165] /* ty=Tensor[(256, 128, 1, 1), float32] */, padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1]) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %195 = nn.batch_norm(%194, meta[relay.Constant][166] /* ty=Tensor[(256), float32] */, meta[relay.Constant][167] /* ty=Tensor[(256), float32] */, meta[relay.Constant][168] /* ty=Tensor[(256), float32] */, meta[relay.Constant][169] /* ty=Tensor[(256), float32] */) /* ty=(Tensor[(1, 256, 14, 14), float32], Tensor[(256), float32], Tensor[(256), float32]) */;
  %196 = %195.0 /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %197 = broadcast_to_like(meta[relay.Constant][170] /* ty=Tensor[(256, 1, 1), float32] */, %196) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %198 = reshape(%196, newshape=[-1]) /* ty=Tensor[(50176), float32] */;
  %199 = reshape(%197, newshape=[-1]) /* ty=Tensor[(50176), float32] */;
  %200 = nn.prelu(%198, %199, axis=0) /* ty=Tensor[(50176), float32] */;
  %201 = reshape(%200, newshape=[1, 256, 14, 14]) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %202 = nn.conv2d(%201, meta[relay.Constant][171] /* ty=Tensor[(256, 1, 3, 3), float32] */, padding=[1, 1, 1, 1], groups=256, channels=256, kernel_size=[3, 3]) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %203 = nn.batch_norm(%202, meta[relay.Constant][172] /* ty=Tensor[(256), float32] */, meta[relay.Constant][173] /* ty=Tensor[(256), float32] */, meta[relay.Constant][174] /* ty=Tensor[(256), float32] */, meta[relay.Constant][175] /* ty=Tensor[(256), float32] */) /* ty=(Tensor[(1, 256, 14, 14), float32], Tensor[(256), float32], Tensor[(256), float32]) */;
  %204 = %203.0 /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %205 = broadcast_to_like(meta[relay.Constant][176] /* ty=Tensor[(256, 1, 1), float32] */, %204) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %206 = reshape(%204, newshape=[-1]) /* ty=Tensor[(50176), float32] */;
  %207 = reshape(%205, newshape=[-1]) /* ty=Tensor[(50176), float32] */;
  %208 = nn.prelu(%206, %207, axis=0) /* ty=Tensor[(50176), float32] */;
  %209 = reshape(%208, newshape=[1, 256, 14, 14]) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %210 = nn.conv2d(%209, meta[relay.Constant][177] /* ty=Tensor[(128, 256, 1, 1), float32] */, padding=[0, 0, 0, 0], channels=128, kernel_size=[1, 1]) /* ty=Tensor[(1, 128, 14, 14), float32] */;
  %211 = nn.batch_norm(%210, meta[relay.Constant][178] /* ty=Tensor[(128), float32] */, meta[relay.Constant][179] /* ty=Tensor[(128), float32] */, meta[relay.Constant][180] /* ty=Tensor[(128), float32] */, meta[relay.Constant][181] /* ty=Tensor[(128), float32] */) /* ty=(Tensor[(1, 128, 14, 14), float32], Tensor[(128), float32], Tensor[(128), float32]) */;
  %212 = %211.0 /* ty=Tensor[(1, 128, 14, 14), float32] */;
  %213 = add(%193, %212) /* ty=Tensor[(1, 128, 14, 14), float32] */;
  %214 = nn.conv2d(%213, meta[relay.Constant][182] /* ty=Tensor[(256, 128, 1, 1), float32] */, padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1]) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %215 = nn.batch_norm(%214, meta[relay.Constant][183] /* ty=Tensor[(256), float32] */, meta[relay.Constant][184] /* ty=Tensor[(256), float32] */, meta[relay.Constant][185] /* ty=Tensor[(256), float32] */, meta[relay.Constant][186] /* ty=Tensor[(256), float32] */) /* ty=(Tensor[(1, 256, 14, 14), float32], Tensor[(256), float32], Tensor[(256), float32]) */;
  %216 = %215.0 /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %217 = broadcast_to_like(meta[relay.Constant][187] /* ty=Tensor[(256, 1, 1), float32] */, %216) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %218 = reshape(%216, newshape=[-1]) /* ty=Tensor[(50176), float32] */;
  %219 = reshape(%217, newshape=[-1]) /* ty=Tensor[(50176), float32] */;
  %220 = nn.prelu(%218, %219, axis=0) /* ty=Tensor[(50176), float32] */;
  %221 = reshape(%220, newshape=[1, 256, 14, 14]) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %222 = nn.conv2d(%221, meta[relay.Constant][188] /* ty=Tensor[(256, 1, 3, 3), float32] */, padding=[1, 1, 1, 1], groups=256, channels=256, kernel_size=[3, 3]) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %223 = nn.batch_norm(%222, meta[relay.Constant][189] /* ty=Tensor[(256), float32] */, meta[relay.Constant][190] /* ty=Tensor[(256), float32] */, meta[relay.Constant][191] /* ty=Tensor[(256), float32] */, meta[relay.Constant][192] /* ty=Tensor[(256), float32] */) /* ty=(Tensor[(1, 256, 14, 14), float32], Tensor[(256), float32], Tensor[(256), float32]) */;
  %224 = %223.0 /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %225 = broadcast_to_like(meta[relay.Constant][193] /* ty=Tensor[(256, 1, 1), float32] */, %224) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %226 = reshape(%224, newshape=[-1]) /* ty=Tensor[(50176), float32] */;
  %227 = reshape(%225, newshape=[-1]) /* ty=Tensor[(50176), float32] */;
  %228 = nn.prelu(%226, %227, axis=0) /* ty=Tensor[(50176), float32] */;
  %229 = reshape(%228, newshape=[1, 256, 14, 14]) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %230 = nn.conv2d(%229, meta[relay.Constant][194] /* ty=Tensor[(128, 256, 1, 1), float32] */, padding=[0, 0, 0, 0], channels=128, kernel_size=[1, 1]) /* ty=Tensor[(1, 128, 14, 14), float32] */;
  %231 = nn.batch_norm(%230, meta[relay.Constant][195] /* ty=Tensor[(128), float32] */, meta[relay.Constant][196] /* ty=Tensor[(128), float32] */, meta[relay.Constant][197] /* ty=Tensor[(128), float32] */, meta[relay.Constant][198] /* ty=Tensor[(128), float32] */) /* ty=(Tensor[(1, 128, 14, 14), float32], Tensor[(128), float32], Tensor[(128), float32]) */;
  %232 = %231.0 /* ty=Tensor[(1, 128, 14, 14), float32] */;
  %233 = add(%213, %232) /* ty=Tensor[(1, 128, 14, 14), float32] */;
  %234 = nn.conv2d(%233, meta[relay.Constant][199] /* ty=Tensor[(256, 128, 1, 1), float32] */, padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1]) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %235 = nn.batch_norm(%234, meta[relay.Constant][200] /* ty=Tensor[(256), float32] */, meta[relay.Constant][201] /* ty=Tensor[(256), float32] */, meta[relay.Constant][202] /* ty=Tensor[(256), float32] */, meta[relay.Constant][203] /* ty=Tensor[(256), float32] */) /* ty=(Tensor[(1, 256, 14, 14), float32], Tensor[(256), float32], Tensor[(256), float32]) */;
  %236 = %235.0 /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %237 = broadcast_to_like(meta[relay.Constant][204] /* ty=Tensor[(256, 1, 1), float32] */, %236) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %238 = reshape(%236, newshape=[-1]) /* ty=Tensor[(50176), float32] */;
  %239 = reshape(%237, newshape=[-1]) /* ty=Tensor[(50176), float32] */;
  %240 = nn.prelu(%238, %239, axis=0) /* ty=Tensor[(50176), float32] */;
  %241 = reshape(%240, newshape=[1, 256, 14, 14]) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %242 = nn.conv2d(%241, meta[relay.Constant][205] /* ty=Tensor[(256, 1, 3, 3), float32] */, padding=[1, 1, 1, 1], groups=256, channels=256, kernel_size=[3, 3]) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %243 = nn.batch_norm(%242, meta[relay.Constant][206] /* ty=Tensor[(256), float32] */, meta[relay.Constant][207] /* ty=Tensor[(256), float32] */, meta[relay.Constant][208] /* ty=Tensor[(256), float32] */, meta[relay.Constant][209] /* ty=Tensor[(256), float32] */) /* ty=(Tensor[(1, 256, 14, 14), float32], Tensor[(256), float32], Tensor[(256), float32]) */;
  %244 = %243.0 /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %245 = broadcast_to_like(meta[relay.Constant][210] /* ty=Tensor[(256, 1, 1), float32] */, %244) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %246 = reshape(%244, newshape=[-1]) /* ty=Tensor[(50176), float32] */;
  %247 = reshape(%245, newshape=[-1]) /* ty=Tensor[(50176), float32] */;
  %248 = nn.prelu(%246, %247, axis=0) /* ty=Tensor[(50176), float32] */;
  %249 = reshape(%248, newshape=[1, 256, 14, 14]) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %250 = nn.conv2d(%249, meta[relay.Constant][211] /* ty=Tensor[(128, 256, 1, 1), float32] */, padding=[0, 0, 0, 0], channels=128, kernel_size=[1, 1]) /* ty=Tensor[(1, 128, 14, 14), float32] */;
  %251 = nn.batch_norm(%250, meta[relay.Constant][212] /* ty=Tensor[(128), float32] */, meta[relay.Constant][213] /* ty=Tensor[(128), float32] */, meta[relay.Constant][214] /* ty=Tensor[(128), float32] */, meta[relay.Constant][215] /* ty=Tensor[(128), float32] */) /* ty=(Tensor[(1, 128, 14, 14), float32], Tensor[(128), float32], Tensor[(128), float32]) */;
  %252 = %251.0 /* ty=Tensor[(1, 128, 14, 14), float32] */;
  %253 = add(%233, %252) /* ty=Tensor[(1, 128, 14, 14), float32] */;
  %254 = nn.conv2d(%253, meta[relay.Constant][216] /* ty=Tensor[(512, 128, 1, 1), float32] */, padding=[0, 0, 0, 0], channels=512, kernel_size=[1, 1]) /* ty=Tensor[(1, 512, 14, 14), float32] */;
  %255 = nn.batch_norm(%254, meta[relay.Constant][217] /* ty=Tensor[(512), float32] */, meta[relay.Constant][218] /* ty=Tensor[(512), float32] */, meta[relay.Constant][219] /* ty=Tensor[(512), float32] */, meta[relay.Constant][220] /* ty=Tensor[(512), float32] */) /* ty=(Tensor[(1, 512, 14, 14), float32], Tensor[(512), float32], Tensor[(512), float32]) */;
  %256 = %255.0 /* ty=Tensor[(1, 512, 14, 14), float32] */;
  %257 = broadcast_to_like(meta[relay.Constant][221] /* ty=Tensor[(512, 1, 1), float32] */, %256) /* ty=Tensor[(1, 512, 14, 14), float32] */;
  %258 = reshape(%256, newshape=[-1]) /* ty=Tensor[(100352), float32] */;
  %259 = reshape(%257, newshape=[-1]) /* ty=Tensor[(100352), float32] */;
  %260 = nn.prelu(%258, %259, axis=0) /* ty=Tensor[(100352), float32] */;
  %261 = reshape(%260, newshape=[1, 512, 14, 14]) /* ty=Tensor[(1, 512, 14, 14), float32] */;
  %262 = nn.conv2d(%261, meta[relay.Constant][222] /* ty=Tensor[(512, 1, 3, 3), float32] */, strides=[2, 2], padding=[1, 1, 1, 1], groups=512, channels=512, kernel_size=[3, 3]) /* ty=Tensor[(1, 512, 7, 7), float32] */;
  %263 = nn.batch_norm(%262, meta[relay.Constant][223] /* ty=Tensor[(512), float32] */, meta[relay.Constant][224] /* ty=Tensor[(512), float32] */, meta[relay.Constant][225] /* ty=Tensor[(512), float32] */, meta[relay.Constant][226] /* ty=Tensor[(512), float32] */) /* ty=(Tensor[(1, 512, 7, 7), float32], Tensor[(512), float32], Tensor[(512), float32]) */;
  %264 = %263.0 /* ty=Tensor[(1, 512, 7, 7), float32] */;
  %265 = broadcast_to_like(meta[relay.Constant][227] /* ty=Tensor[(512, 1, 1), float32] */, %264) /* ty=Tensor[(1, 512, 7, 7), float32] */;
  %266 = reshape(%264, newshape=[-1]) /* ty=Tensor[(25088), float32] */;
  %267 = reshape(%265, newshape=[-1]) /* ty=Tensor[(25088), float32] */;
  %268 = nn.prelu(%266, %267, axis=0) /* ty=Tensor[(25088), float32] */;
  %269 = reshape(%268, newshape=[1, 512, 7, 7]) /* ty=Tensor[(1, 512, 7, 7), float32] */;
  %270 = nn.conv2d(%269, meta[relay.Constant][228] /* ty=Tensor[(128, 512, 1, 1), float32] */, padding=[0, 0, 0, 0], channels=128, kernel_size=[1, 1]) /* ty=Tensor[(1, 128, 7, 7), float32] */;
  %271 = nn.batch_norm(%270, meta[relay.Constant][229] /* ty=Tensor[(128), float32] */, meta[relay.Constant][230] /* ty=Tensor[(128), float32] */, meta[relay.Constant][231] /* ty=Tensor[(128), float32] */, meta[relay.Constant][232] /* ty=Tensor[(128), float32] */) /* ty=(Tensor[(1, 128, 7, 7), float32], Tensor[(128), float32], Tensor[(128), float32]) */;
  %272 = %271.0 /* ty=Tensor[(1, 128, 7, 7), float32] */;
  %273 = nn.conv2d(%272, meta[relay.Constant][233] /* ty=Tensor[(256, 128, 1, 1), float32] */, padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1]) /* ty=Tensor[(1, 256, 7, 7), float32] */;
  %274 = nn.batch_norm(%273, meta[relay.Constant][234] /* ty=Tensor[(256), float32] */, meta[relay.Constant][235] /* ty=Tensor[(256), float32] */, meta[relay.Constant][236] /* ty=Tensor[(256), float32] */, meta[relay.Constant][237] /* ty=Tensor[(256), float32] */) /* ty=(Tensor[(1, 256, 7, 7), float32], Tensor[(256), float32], Tensor[(256), float32]) */;
  %275 = %274.0 /* ty=Tensor[(1, 256, 7, 7), float32] */;
  %276 = broadcast_to_like(meta[relay.Constant][238] /* ty=Tensor[(256, 1, 1), float32] */, %275) /* ty=Tensor[(1, 256, 7, 7), float32] */;
  %277 = reshape(%275, newshape=[-1]) /* ty=Tensor[(12544), float32] */;
  %278 = reshape(%276, newshape=[-1]) /* ty=Tensor[(12544), float32] */;
  %279 = nn.prelu(%277, %278, axis=0) /* ty=Tensor[(12544), float32] */;
  %280 = reshape(%279, newshape=[1, 256, 7, 7]) /* ty=Tensor[(1, 256, 7, 7), float32] */;
  %281 = nn.conv2d(%280, meta[relay.Constant][239] /* ty=Tensor[(256, 1, 3, 3), float32] */, padding=[1, 1, 1, 1], groups=256, channels=256, kernel_size=[3, 3]) /* ty=Tensor[(1, 256, 7, 7), float32] */;
  %282 = nn.batch_norm(%281, meta[relay.Constant][240] /* ty=Tensor[(256), float32] */, meta[relay.Constant][241] /* ty=Tensor[(256), float32] */, meta[relay.Constant][242] /* ty=Tensor[(256), float32] */, meta[relay.Constant][243] /* ty=Tensor[(256), float32] */) /* ty=(Tensor[(1, 256, 7, 7), float32], Tensor[(256), float32], Tensor[(256), float32]) */;
  %283 = %282.0 /* ty=Tensor[(1, 256, 7, 7), float32] */;
  %284 = broadcast_to_like(meta[relay.Constant][244] /* ty=Tensor[(256, 1, 1), float32] */, %283) /* ty=Tensor[(1, 256, 7, 7), float32] */;
  %285 = reshape(%283, newshape=[-1]) /* ty=Tensor[(12544), float32] */;
  %286 = reshape(%284, newshape=[-1]) /* ty=Tensor[(12544), float32] */;
  %287 = nn.prelu(%285, %286, axis=0) /* ty=Tensor[(12544), float32] */;
  %288 = reshape(%287, newshape=[1, 256, 7, 7]) /* ty=Tensor[(1, 256, 7, 7), float32] */;
  %289 = nn.conv2d(%288, meta[relay.Constant][245] /* ty=Tensor[(128, 256, 1, 1), float32] */, padding=[0, 0, 0, 0], channels=128, kernel_size=[1, 1]) /* ty=Tensor[(1, 128, 7, 7), float32] */;
  %290 = nn.batch_norm(%289, meta[relay.Constant][246] /* ty=Tensor[(128), float32] */, meta[relay.Constant][247] /* ty=Tensor[(128), float32] */, meta[relay.Constant][248] /* ty=Tensor[(128), float32] */, meta[relay.Constant][249] /* ty=Tensor[(128), float32] */) /* ty=(Tensor[(1, 128, 7, 7), float32], Tensor[(128), float32], Tensor[(128), float32]) */;
  %291 = %290.0 /* ty=Tensor[(1, 128, 7, 7), float32] */;
  %292 = add(%272, %291) /* ty=Tensor[(1, 128, 7, 7), float32] */;
  %293 = nn.conv2d(%292, meta[relay.Constant][250] /* ty=Tensor[(256, 128, 1, 1), float32] */, padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1]) /* ty=Tensor[(1, 256, 7, 7), float32] */;
  %294 = nn.batch_norm(%293, meta[relay.Constant][251] /* ty=Tensor[(256), float32] */, meta[relay.Constant][252] /* ty=Tensor[(256), float32] */, meta[relay.Constant][253] /* ty=Tensor[(256), float32] */, meta[relay.Constant][254] /* ty=Tensor[(256), float32] */) /* ty=(Tensor[(1, 256, 7, 7), float32], Tensor[(256), float32], Tensor[(256), float32]) */;
  %295 = %294.0 /* ty=Tensor[(1, 256, 7, 7), float32] */;
  %296 = broadcast_to_like(meta[relay.Constant][255] /* ty=Tensor[(256, 1, 1), float32] */, %295) /* ty=Tensor[(1, 256, 7, 7), float32] */;
  %297 = reshape(%295, newshape=[-1]) /* ty=Tensor[(12544), float32] */;
  %298 = reshape(%296, newshape=[-1]) /* ty=Tensor[(12544), float32] */;
  %299 = nn.prelu(%297, %298, axis=0) /* ty=Tensor[(12544), float32] */;
  %300 = reshape(%299, newshape=[1, 256, 7, 7]) /* ty=Tensor[(1, 256, 7, 7), float32] */;
  %301 = nn.conv2d(%300, meta[relay.Constant][256] /* ty=Tensor[(256, 1, 3, 3), float32] */, padding=[1, 1, 1, 1], groups=256, channels=256, kernel_size=[3, 3]) /* ty=Tensor[(1, 256, 7, 7), float32] */;
  %302 = nn.batch_norm(%301, meta[relay.Constant][257] /* ty=Tensor[(256), float32] */, meta[relay.Constant][258] /* ty=Tensor[(256), float32] */, meta[relay.Constant][259] /* ty=Tensor[(256), float32] */, meta[relay.Constant][260] /* ty=Tensor[(256), float32] */) /* ty=(Tensor[(1, 256, 7, 7), float32], Tensor[(256), float32], Tensor[(256), float32]) */;
  %303 = %302.0 /* ty=Tensor[(1, 256, 7, 7), float32] */;
  %304 = broadcast_to_like(meta[relay.Constant][261] /* ty=Tensor[(256, 1, 1), float32] */, %303) /* ty=Tensor[(1, 256, 7, 7), float32] */;
  %305 = reshape(%303, newshape=[-1]) /* ty=Tensor[(12544), float32] */;
  %306 = reshape(%304, newshape=[-1]) /* ty=Tensor[(12544), float32] */;
  %307 = nn.prelu(%305, %306, axis=0) /* ty=Tensor[(12544), float32] */;
  %308 = reshape(%307, newshape=[1, 256, 7, 7]) /* ty=Tensor[(1, 256, 7, 7), float32] */;
  %309 = nn.conv2d(%308, meta[relay.Constant][262] /* ty=Tensor[(128, 256, 1, 1), float32] */, padding=[0, 0, 0, 0], channels=128, kernel_size=[1, 1]) /* ty=Tensor[(1, 128, 7, 7), float32] */;
  %310 = nn.batch_norm(%309, meta[relay.Constant][263] /* ty=Tensor[(128), float32] */, meta[relay.Constant][264] /* ty=Tensor[(128), float32] */, meta[relay.Constant][265] /* ty=Tensor[(128), float32] */, meta[relay.Constant][266] /* ty=Tensor[(128), float32] */) /* ty=(Tensor[(1, 128, 7, 7), float32], Tensor[(128), float32], Tensor[(128), float32]) */;
  %311 = %310.0 /* ty=Tensor[(1, 128, 7, 7), float32] */;
  %312 = add(%292, %311) /* ty=Tensor[(1, 128, 7, 7), float32] */;
  %313 = nn.conv2d(%312, meta[relay.Constant][267] /* ty=Tensor[(512, 128, 1, 1), float32] */, padding=[0, 0, 0, 0], channels=512, kernel_size=[1, 1]) /* ty=Tensor[(1, 512, 7, 7), float32] */;
  %314 = nn.batch_norm(%313, meta[relay.Constant][268] /* ty=Tensor[(512), float32] */, meta[relay.Constant][269] /* ty=Tensor[(512), float32] */, meta[relay.Constant][270] /* ty=Tensor[(512), float32] */, meta[relay.Constant][271] /* ty=Tensor[(512), float32] */) /* ty=(Tensor[(1, 512, 7, 7), float32], Tensor[(512), float32], Tensor[(512), float32]) */;
  %315 = %314.0 /* ty=Tensor[(1, 512, 7, 7), float32] */;
  %316 = broadcast_to_like(meta[relay.Constant][272] /* ty=Tensor[(512, 1, 1), float32] */, %315) /* ty=Tensor[(1, 512, 7, 7), float32] */;
  %317 = reshape(%315, newshape=[-1]) /* ty=Tensor[(25088), float32] */;
  %318 = reshape(%316, newshape=[-1]) /* ty=Tensor[(25088), float32] */;
  %319 = nn.prelu(%317, %318, axis=0) /* ty=Tensor[(25088), float32] */;
  %320 = reshape(%319, newshape=[1, 512, 7, 7]) /* ty=Tensor[(1, 512, 7, 7), float32] */;
  %321 = nn.conv2d(%320, meta[relay.Constant][273] /* ty=Tensor[(512, 1, 7, 7), float32] */, padding=[0, 0, 0, 0], groups=512, channels=512, kernel_size=[7, 7]) /* ty=Tensor[(1, 512, 1, 1), float32] */;
  %322 = nn.batch_norm(%321, meta[relay.Constant][274] /* ty=Tensor[(512), float32] */, meta[relay.Constant][275] /* ty=Tensor[(512), float32] */, meta[relay.Constant][276] /* ty=Tensor[(512), float32] */, meta[relay.Constant][277] /* ty=Tensor[(512), float32] */) /* ty=(Tensor[(1, 512, 1, 1), float32], Tensor[(512), float32], Tensor[(512), float32]) */;
  %323 = %322.0 /* ty=Tensor[(1, 512, 1, 1), float32] */;
  %324 = nn.conv2d(%323, meta[relay.Constant][278] /* ty=Tensor[(128, 512, 1, 1), float32] */, padding=[0, 0, 0, 0], channels=128, kernel_size=[1, 1]) /* ty=Tensor[(1, 128, 1, 1), float32] */;
  %325 = nn.batch_norm(%324, meta[relay.Constant][279] /* ty=Tensor[(128), float32] */, meta[relay.Constant][280] /* ty=Tensor[(128), float32] */, meta[relay.Constant][281] /* ty=Tensor[(128), float32] */, meta[relay.Constant][282] /* ty=Tensor[(128), float32] */) /* ty=(Tensor[(1, 128, 1, 1), float32], Tensor[(128), float32], Tensor[(128), float32]) */;
  %326 = %325.0 /* ty=Tensor[(1, 128, 1, 1), float32] */;
  reshape(%326, newshape=[-1, 128]) /* ty=Tensor[(1, 128), float32] */
}

